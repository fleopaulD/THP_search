{
  "title":"HTML / CSS : la mise en page",
  "url":"https://www.thehackingproject.org/fr/dashboard/courses/4/lessons/297",
  "signature":"-1583229454533778642",
  "subheadings":[
    "1. Introduction",
    "2. Historique",
    "3. La ressource",
    "3.1. Apprendre FlexBox",
    "3.2. R√©cap sur FlexBox",
    "‚ö†Ô∏è ALERTE ERREUR COMMUNE",
    "‚ö†Ô∏è ALERTE ERREUR COMMUNE",
    "4. Points importants √† retenir",
    "üöÄ ALERTE BONNE ASTUCE",
    "5. Pour aller plus loin"
  ],
  "contents":[
    "Les MotherFuckingWebsites c'est bien, mais comment organiser une page web complexe avec un header, un footer, des √©l√©ments centr√©s, des sections ? Il est temps d'apprendre √† utiliser FlexBox en CSS, le nouveau standard pour mettre en page son site web !",
    "CSS (Cascading Style Sheets) est sorti au milieu des ann√©es 90, avec une technique r√©volutionnaire de mise en page par cascade*. C'est rapidement devenu le langage universel pour habiller une page web. L'outil FlexBox a √©t√© impl√©ment√© dans CSS3 (vers 2009), puis s'est peu √† peu impos√© sur l'ensemble des navigateurs jusqu'√† devenir l'outil privil√©gi√© pour placer les √©l√©ments d'une page HTML.",
    "*Cascade : c'est ainsi qu'on appelle la combinaison de diff√©rentes sources de styles appliqu√©s √† un m√™me document, selon leur degr√© respectif de priorit√©. Merci Wikip√©dia !",
    "Cette fois, nous allons te demander de continuer le cours HTML / CSS de OpenClassrooms √† partir de l√† o√π tu t'√©tais arr√™t√©. Avance dans la track HTML / CSS de OpenClassrooms jusqu'√† la partie \"Mise en page avec FlexBox\" inclue.",
    "Maintenant que tu as compris comment marche FlexBox, nous te proposons de pratiquer avec un jeu : FlexBox Froggy. C'est un excellent exercice pour t'entra√Æner √† la mise en forme avec FlexBox.",
    "FlexBox est maintenant LA r√©f√©rence en CSS pour centrer des √©l√©ments, les r√©partir en hauteur ou en largeur, etc. Pour ceux qui avaient d√©j√† pratiqu√© le CSS auparavant, √©vitez au maximum les inline-block ou autre float. FlexBox doit √™tre privil√©gi√© car compatible avec tous les navigateurs r√©cents et son rendu est plus uniforme quelle que soit la taille des √©crans (de l'√©cran plat jusqu'au smartphone).",
    "Pour mettre en place FlexBox, rien de plus simple ! Cr√©e un √©l√©ment HTML (par exemple une div) contenant les autres √©l√©ments √† aligner en FlexBox. Exemple :",
    "Dans l'exemple ci-dessus, rajoute √† la div contenant l'id conteneur les propri√©t√©s CSS suivantes :",
    "Applique FlexBox √† tous ses √©l√©ments enfants (ou children) avec le CSS display: flex;",
    "Choisis l'axe d'alignement des children : soit en ligne (mode par d√©faut) avec flex-direction: row;, soit en colonne avec flex-direction: column;",
    "Choisis ensuite comment les √©l√©ments doivent se r√©partir sur cet axe :\nTous rassembl√©s au d√©but avec justify-content: flex-start;?\nTous rassembl√©s √† la fin avec justify-content: flex-end;?\nTous centr√©s avec justify-content: center;?\nR√©partis sur l'axe, sans marge, avec justify-content: space-between;?\nR√©partis sur l'axe, avec marge, en utiliant justify-content: space-around;?",
    "Tous rassembl√©s au d√©but avec justify-content: flex-start;?",
    "Tous rassembl√©s √† la fin avec justify-content: flex-end;?",
    "Tous centr√©s avec justify-content: center;?",
    "R√©partis sur l'axe, sans marge, avec justify-content: space-between;?",
    "R√©partis sur l'axe, avec marge, en utiliant justify-content: space-around;?",
    "Enfin, choisis si tu souhaites aussi aligner tes √©l√©ments sur l'autre axe (horizontalement ou verticalement) avec la commande align-items: *qqch*;",
    "Si tu veux r√©partir horizontalement tes √©l√©ments avec FlexBox, pas de souci : le navigateur va utiliser toute la largeur disponible sur l'√©cran. Par contre, pour les r√©partir verticalement, tu dois absolument sp√©cifier une hauteur √† l'√©l√©ment conteneur (ex : height: 100px;). Sans √ßa, tes justify-content: center ou justify-content: space-around n'auront aucun effet verticalement !",
    "Je te vois venir avec tes MAIS POURQUOI ? Et bien gros malin, c'est tout simplement parce qu'on peut scroller sur un site web. Quand on dit au navigateur \"centre-moi ces √©l√©ments verticalement\", s'il ne sait pas sur quelle hauteur il travaille, comment trouver le centre ? üòò",
    "Quand tu ajoutes un display:flex; √† un √©l√©ment, FlexBox est appliqu√© uniquement aux √©l√©ments correspondant √† ses enfant directs. Les \"petits-enfants\" ou autres n'ont pas FlexBox.",
    "FlexBox est un outil puissant pour placer o√π l'on veut un √©l√©ment sur une page HTML, mais qui n√©cessite un peu de pratique pour bien le comprendre. N'h√©site pas √† jeter un oeil √† la page W3school sur le sujet afin de visualiser rapidement le code CSS utilisant FlexBox et son r√©sultat sur une page HTML.",
    "Bosser en FlexBox, c'est pas simple : on change le CSS, on rafra√Æchit le navigateur, les √©l√©ments bougent mais on sait pas trop comment ni pourquoi...",
    "Pour faciliter la lisibilit√© de tout √ßa, mets temporairement des bordures √† tous tes √©l√©ments en leur appliquant une class= \"border-flex\" √† laquelle tu vas appliquer le CSS suivant (au format \"border: *√©paisseur_de_bordure* *style_de_bordure* *couleur_de_bordure*\") :",
    "La pr√©sence de ces bordures va l√©g√®rement d√©caler tes √©l√©ments (elles font quelques pixels) mais c'est super pour voir quelle taille fait chaque √©l√©ment, o√π il se place, qui est centr√© sur quoi, etc.",
    "Pas besoin de passer des ann√©es dessus, mais tu peux finir le cours de OpenClassrooms sur HTML / CSS si tu veux √™tre un champion du Front !",
    "Tu peux aussi faire la suite de FlexBox Froggy (Grid Garden) qui te pr√©sente la notion de FlexGrid.",
    "Enfin, on aime beaucoup la vid√©o tuto du corsaire Kleber qu'il a faite afin de vous montrer quelques bases de mise en forme."
  ]
}